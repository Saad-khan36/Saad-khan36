<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.BackgroundImage" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        /9j/4AAQSkZJRgABAQEAYABgAAD/2wBDAAgGBgcGBQgHBwcJCQgKDBQNDAsLDBkSEw8UHRofHh0aHBwg
        JC4nICIsIxwcKDcpLDAxNDQ0Hyc5PTgyPC4zNDL/2wBDAQkJCQwLDBgNDRgyIRwhMjIyMjIyMjIyMjIy
        MjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjIyMjL/wAARCABLAEsDASIAAhEBAxEB/8QA
        HwAAAQUBAQEBAQEAAAAAAAAAAAECAwQFBgcICQoL/8QAtRAAAgEDAwIEAwUFBAQAAAF9AQIDAAQRBRIh
        MUEGE1FhByJxFDKBkaEII0KxwRVS0fAkM2JyggkKFhcYGRolJicoKSo0NTY3ODk6Q0RFRkdISUpTVFVW
        V1hZWmNkZWZnaGlqc3R1dnd4eXqDhIWGh4iJipKTlJWWl5iZmqKjpKWmp6ipqrKztLW2t7i5usLDxMXG
        x8jJytLT1NXW19jZ2uHi4+Tl5ufo6erx8vP09fb3+Pn6/8QAHwEAAwEBAQEBAQEBAQAAAAAAAAECAwQF
        BgcICQoL/8QAtREAAgECBAQDBAcFBAQAAQJ3AAECAxEEBSExBhJBUQdhcRMiMoEIFEKRobHBCSMzUvAV
        YnLRChYkNOEl8RcYGRomJygpKjU2Nzg5OkNERUZHSElKU1RVVldYWVpjZGVmZ2hpanN0dXZ3eHl6goOE
        hYaHiImKkpOUlZaXmJmaoqOkpaanqKmqsrO0tba3uLm6wsPExcbHyMnK0tPU1dbX2Nna4uPk5ebn6Onq
        8vP09fb3+Pn6/9oADAMBAAIRAxEAPwD3ZmFx8q8Y55o3Ar5H8Q4z2obB/wBRwe+OOK5u9vZdWn+y2pAg
        A/eSdnHqfVfQfxdTx1ALlzr8VuPs9on2mRiQGXO38Mct+HHuKpA6xcctP9nU9gdv6Lk/+PVatrSK1UiM
        fMfvOeWb6n+nQV438X/iTe6ffP4a0S4a3kRR9suYzhwSMiNT/DwQSRzzj1oA9Pliihn2T61FHMf4XlIb
        8jJmrQtdShIeC/Zj1GXYZ/76LD9K+MndpHZ3YuzHJZjkn8a7r4f/ABJ1LwlqMMFzPLcaM7ATW7sW8sH+
        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
</value>
  </data>
</root>